{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mary/Documents/personalsite/pages/art.js\";\nimport React, { useState } from 'react';\nimport { useRouter } from \"next/router\";\nimport Image from 'next/image';\nimport FilterButton from '../components/FilterButton';\nimport styles from './art.module.css';\nconst projects = [{\n  name: \"Copy/Paste\",\n  year: \"2018\",\n  desc: \"Series of mixed media collages made from children's books then digitally altered\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/h_250/v1538425934/collages/digital/c1.jpg\",\n  alt: \"collage\",\n  tags: [\"art\"],\n  mary: '4'\n}, {\n  name: \"ICT VR Research\",\n  year: \"2019\",\n  desc: \"VR Games created for the Institute of Creative Technology for physical therapy resesarch. Uses hand tracking to track how patients practice various arm motions.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1609780336/games/make-it-neat-preview.gif\",\n  tags: [\"code\", \"research\", \"game\"],\n  mary: '2'\n}, {\n  name: \"Art-Discontent\",\n  year: \"2020\",\n  desc: \"Profiles on young artistic practices. Website, interviews, and articles all created by me.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1609866701/previews/art-discontent-preview.gif\",\n  tags: [\"art\", \"code\", \"writing\"],\n  mary: '1'\n}, {\n  name: \"Off the Record\",\n  year: \"2020\",\n  desc: \"Text based game about the experience of journalists of color for Study Hall. Interface created by me.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1609866836/off-the-record-preview.png\",\n  tags: [\"freelance\", \"games\", \"code\"],\n  mary: '2'\n}, {\n  name: \"Vaporsquare\",\n  year: \"2018\",\n  desc: \"An interactive installation exploring promised technological paradise, obsolescense, and unknown systems.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1535237063/vaporsquare/cmr2.gif\",\n  tags: [\"art\"],\n  mary: '1'\n}, {\n  name: \"Publications\",\n  year: \"2020\",\n  desc: \"Various prints, zines, and sketchbooks in an online format.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1609866836/off-the-record-preview.png\",\n  tags: [\"art\", \"writing\"],\n  mary: '3'\n}, {\n  name: \"Alexa, the Acousmatic Voice\",\n  year: \"2020\",\n  desc: \"Web sound sequencer and essay about the source of Amazon's Alexa\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1609867855/games/acousmaticalexa.png\",\n  tags: [\"art\", \"writing\", \"code\"],\n  mary: '5'\n}, {\n  name: \"Vaporwave, the Eclectic Aesthetic about Time\",\n  year: \"2019\",\n  desc: \"Web Image Generator and essay about the visual inspirations of Vaporwave aesthetics\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1580524622/games/vaporwavegen.png\",\n  tags: [\"art\", \"writing\", \"code\"],\n  mary: '3'\n}];\n\nconst Art = () => {\n  const tags = useState([\"art\", \"code\", \"freelance\", \"research\", \"games\", \"vr/ar\", \"writing\"]);\n  const filterTags = useState([]);\n  const projects = useState(projects);\n  const filteredProjects = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.projectPageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filterTagContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filterTitle,\n        children: \"Filter Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"/*\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.filterOrder,\n          id: \"filterOrder\",\n          onChange: this.filterOrder.bind(this),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year_desc\",\n            children: \"Year \\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year_asc\",\n            children: \"Year \\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mary\",\n            children: \"Mary's Favs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.clearButton,\n        onClick: this.clearFilters.bind(this),\n        children: \"Clear Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), this.state.tags.map((tag, i) => {\n        return /*#__PURE__*/_jsxDEV(FilterButton, {\n          name: tag,\n          onChange: this.filterResults.bind(this, tag)\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.projectsContainer,\n      children: len ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.topBar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.projectContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.projectTextContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.projectNameContainer,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.projectDesc,\n              children: \"Yikes! No project matches these filters! Try adjusting the filters \\u2B05 here \\u2B05 !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.previewImage,\n            src: \"https://res.cloudinary.com/dftvewldz/image/upload/v1610068685/cryingcat.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : this.state.filteredProjects.map((project, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.topBar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.projectContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.projectTextContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.projectNameContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.projectName,\n                  children: project.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.projectYear,\n                  children: [\"  \", project.year]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.projectDesc,\n                children: project.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: styles.previewImage,\n              src: project.image,\n              alt: project.alt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, `${project.name}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), \" */\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n};\n/*\nclass Art extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      tags: [\"art\", \"code\", \"freelance\", \"research\", \"games\", \"vr/ar\", \"writing\"],\n      filterTags: [],\n      projects: projects,\n      filteredProjects: []\n      }\n    }\n\n    changeFilter(tag){\n      //add tag if not already in filter\n      if (!this.state.filterTags.includes(tag)){\n        let copy = this.state.filterTags;\n        copy.push(tag);\n        this.setState({\n          filterTags: copy\n        });\n      } else {\n        //remove tag if already in filter\n        let copy = this.state.filterTags;\n        let index = copy.indexOf(tag);\n        copy.splice(index, 1);\n\n        this.setState({\n          filterTags: copy\n        });\n      }\n    }\n\n    clearFilters(){\n      this.setState({\n        filterTags: []\n      });\n\n      this.setState({\n        filteredProjects: projects\n      });\n    }\n\n    filterResults(tag){\n      this.changeFilter(tag);\n\n      let filteredProjects = this.state.projects.filter((p) => {\n        return this.state.filterTags.every( t => p.tags.includes(t) )\n      });\n\n      let filter = document.getElementById('filterOrder')\n\n      switch(filter.value){\n        case \"year_desc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(b.year) - parseInt(a.year);\n          })\n          break;\n        case \"year_asc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.year) - parseInt(b.year);\n          })\n          break;\n        case \"mary\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.mary) - parseInt(b.mary);\n          })\n          break;\n        }\n\n      this.setState({\n        filteredProjects: filteredProjects\n      });\n    }\n\n    filterOrder(){\n      let filter = document.getElementById('filterOrder')\n      let filteredProjects = this.state.filteredProjects\n\n      switch(filter.value){\n        case \"year_desc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(b.year) - parseInt(a.year);\n          })\n          this.setState({\n            filteredProjects: filteredProjects\n          });\n          break;\n        case \"year_asc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.year) - parseInt(b.year);\n          })\n          this.setState({\n            filteredProjects: filteredProjects\n          });\n          break;\n        case \"mary\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.mary) - parseInt(b.mary);\n          })\n          this.setState({\n            filteredProjects: filteredProjects\n          });\n          break;\n      }\n    }\n\n    render() {\n      let len = this.state.filteredProjects.length == 0;\n\n      return (\n        <div className={styles.projectPageContainer}>\n\n        <div className={styles.filterTagContainer}>\n          <div className={styles.filterTitle}>Filter Projects</div>\n          <div>\n          <select className={styles.filterOrder} id=\"filterOrder\" onChange={this.filterOrder.bind(this)}>\n            <option value=\"year_desc\">Year ▼</option>\n            <option value=\"year_asc\">Year ▲</option>\n            <option value=\"mary\">Mary's Favs</option>\n          </select>\n\n          </div>\n          <button className={styles.clearButton} onClick={this.clearFilters.bind(this)}>Clear Filters</button>\n          {this.state.tags.map((tag, i) => {\n            return(\n              <FilterButton\n              name={tag}\n              key={tag}\n              onChange={this.filterResults.bind(this, tag)}\n              ></FilterButton>\n            )\n          })}\n        </div>\n\n        <div className={styles.projectsContainer}>\n\n        {len\n          ? <div>\n            <div className={styles.topBar}></div>\n              <div className={styles.projectContainer}>\n              <div className={styles.projectTextContainer}>\n              <div className={styles.projectNameContainer}>\n                <span></span>\n              </div>\n              <div className={styles.projectDesc}>\n              Yikes! No project matches these filters! Try adjusting the filters ⬅ here ⬅ !\n\n              </div>\n              </div>\n            <img className={styles.previewImage} src=\"https://res.cloudinary.com/dftvewldz/image/upload/v1610068685/cryingcat.jpg\" />\n            </div>\n          </div>\n          : this.state.filteredProjects.map((project, i) => {\n            return (\n              <div key={`${project.name}`} >\n                <div className={styles.topBar}></div>\n                <div className={styles.projectContainer}>\n                  <div className={styles.projectTextContainer}>\n                  <div className={styles.projectNameContainer}>\n                    <span className={styles.projectName}>{project.name}</span>\n                    <span className={styles.projectYear}>  {project.year}</span>\n                  </div>\n                  <div className={styles.projectDesc}>\n                  {project.desc}\n                  </div>\n                </div>\n                <img className={styles.previewImage} src={project.image} alt={project.alt} />\n                </div>\n              </div>\n\n            )\n          })\n        }\n\n        </div>\n        </div>\n      )\n    }\n  }\n*/\n\n\nexport default Art;","map":{"version":3,"sources":["/Users/mary/Documents/personalsite/pages/art.js"],"names":["React","useState","useRouter","Image","FilterButton","styles","projects","name","year","desc","image","alt","tags","mary","Art","filterTags","filteredProjects","projectPageContainer","filterTagContainer","filterTitle","filterOrder","bind","clearButton","clearFilters","state","map","tag","i","filterResults","projectsContainer","len","topBar","projectContainer","projectTextContainer","projectNameContainer","projectDesc","previewImage","project","projectName","projectYear"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useRouter } from \"next/router\"\n\n\nimport Image from 'next/image'\nimport FilterButton from '../components/FilterButton'\nimport styles from './art.module.css'\n\nconst projects = [{\n    name: \"Copy/Paste\",\n    year: \"2018\",\n    desc: \"Series of mixed media collages made from children's books then digitally altered\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/h_250/v1538425934/collages/digital/c1.jpg\",\n    alt: \"collage\",\n    tags: [\"art\"],\n    mary: '4'\n  },{\n    name: \"ICT VR Research\",\n    year: \"2019\",\n    desc: \"VR Games created for the Institute of Creative Technology for physical therapy resesarch. Uses hand tracking to track how patients practice various arm motions.\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1609780336/games/make-it-neat-preview.gif\",\n    tags: [\"code\", \"research\", \"game\"],\n    mary: '2'\n  },{\n    name: \"Art-Discontent\",\n    year: \"2020\",\n    desc: \"Profiles on young artistic practices. Website, interviews, and articles all created by me.\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1609866701/previews/art-discontent-preview.gif\",\n    tags: [\"art\", \"code\", \"writing\"],\n    mary: '1'\n  },{\n    name: \"Off the Record\",\n    year: \"2020\",\n    desc: \"Text based game about the experience of journalists of color for Study Hall. Interface created by me.\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1609866836/off-the-record-preview.png\",\n    tags: [\"freelance\", \"games\", \"code\"],\n    mary: '2'\n  },{\n    name: \"Vaporsquare\",\n    year: \"2018\",\n    desc: \"An interactive installation exploring promised technological paradise, obsolescense, and unknown systems.\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1535237063/vaporsquare/cmr2.gif\",\n    tags: [\"art\"],\n    mary: '1'\n  },{\n    name: \"Publications\",\n    year: \"2020\",\n    desc: \"Various prints, zines, and sketchbooks in an online format.\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1609866836/off-the-record-preview.png\",\n    tags: [\"art\", \"writing\"],\n    mary: '3'\n  },{\n    name: \"Alexa, the Acousmatic Voice\",\n    year: \"2020\",\n    desc: \"Web sound sequencer and essay about the source of Amazon's Alexa\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1609867855/games/acousmaticalexa.png\",\n    tags: [\"art\", \"writing\", \"code\"],\n    mary: '5'\n  },{\n    name: \"Vaporwave, the Eclectic Aesthetic about Time\",\n    year: \"2019\",\n    desc: \"Web Image Generator and essay about the visual inspirations of Vaporwave aesthetics\",\n    image: \"https://res.cloudinary.com/dftvewldz/image/upload/v1580524622/games/vaporwavegen.png\",\n    tags: [\"art\", \"writing\", \"code\"],\n    mary: '3'\n}];\n\nconst Art = () => {\n  const tags = useState([\"art\", \"code\", \"freelance\", \"research\", \"games\", \"vr/ar\", \"writing\"]);\n  const filterTags = useState([]);\n  const projects = useState(projects);\n  const filteredProjects = useState([]);\n\n  return (\n      <div className={styles.projectPageContainer}>\n\n      <div className={styles.filterTagContainer}>\n        <div className={styles.filterTitle}>Filter Projects</div>\n        <div>\n        /*\n        <select className={styles.filterOrder} id=\"filterOrder\" onChange={this.filterOrder.bind(this)}>\n          <option value=\"year_desc\">Year ▼</option>\n          <option value=\"year_asc\">Year ▲</option>\n          <option value=\"mary\">Mary's Favs</option>\n        </select>\n\n        </div>\n        <button className={styles.clearButton} onClick={this.clearFilters.bind(this)}>Clear Filters</button>\n        {this.state.tags.map((tag, i) => {\n          return(\n            <FilterButton\n            name={tag}\n            key={tag}\n            onChange={this.filterResults.bind(this, tag)}\n            ></FilterButton>\n          )\n        })}\n      </div>\n\n      <div className={styles.projectsContainer}>\n\n      {len\n        ? <div>\n          <div className={styles.topBar}></div>\n            <div className={styles.projectContainer}>\n            <div className={styles.projectTextContainer}>\n            <div className={styles.projectNameContainer}>\n              <span></span>\n            </div>\n            <div className={styles.projectDesc}>\n            Yikes! No project matches these filters! Try adjusting the filters ⬅ here ⬅ !\n\n            </div>\n            </div>\n          <img className={styles.previewImage} src=\"https://res.cloudinary.com/dftvewldz/image/upload/v1610068685/cryingcat.jpg\" />\n          </div>\n        </div>\n        : this.state.filteredProjects.map((project, i) => {\n          return (\n            <div key={`${project.name}`} >\n              <div className={styles.topBar}></div>\n              <div className={styles.projectContainer}>\n                <div className={styles.projectTextContainer}>\n                <div className={styles.projectNameContainer}>\n                  <span className={styles.projectName}>{project.name}</span>\n                  <span className={styles.projectYear}>  {project.year}</span>\n                </div>\n                <div className={styles.projectDesc}>\n                {project.desc}\n                </div>\n              </div>\n              <img className={styles.previewImage} src={project.image} alt={project.alt} />\n              </div>\n            </div>\n\n          )\n        })\n      }\n\n      </div> */\n      </div>\n  )\n}\n\n/*\nclass Art extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      tags: [\"art\", \"code\", \"freelance\", \"research\", \"games\", \"vr/ar\", \"writing\"],\n      filterTags: [],\n      projects: projects,\n      filteredProjects: []\n      }\n    }\n\n    changeFilter(tag){\n      //add tag if not already in filter\n      if (!this.state.filterTags.includes(tag)){\n        let copy = this.state.filterTags;\n        copy.push(tag);\n        this.setState({\n          filterTags: copy\n        });\n      } else {\n        //remove tag if already in filter\n        let copy = this.state.filterTags;\n        let index = copy.indexOf(tag);\n        copy.splice(index, 1);\n\n        this.setState({\n          filterTags: copy\n        });\n      }\n    }\n\n    clearFilters(){\n      this.setState({\n        filterTags: []\n      });\n\n      this.setState({\n        filteredProjects: projects\n      });\n    }\n\n    filterResults(tag){\n      this.changeFilter(tag);\n\n      let filteredProjects = this.state.projects.filter((p) => {\n        return this.state.filterTags.every( t => p.tags.includes(t) )\n      });\n\n      let filter = document.getElementById('filterOrder')\n\n      switch(filter.value){\n        case \"year_desc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(b.year) - parseInt(a.year);\n          })\n          break;\n        case \"year_asc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.year) - parseInt(b.year);\n          })\n          break;\n        case \"mary\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.mary) - parseInt(b.mary);\n          })\n          break;\n        }\n\n      this.setState({\n        filteredProjects: filteredProjects\n      });\n    }\n\n    filterOrder(){\n      let filter = document.getElementById('filterOrder')\n      let filteredProjects = this.state.filteredProjects\n\n      switch(filter.value){\n        case \"year_desc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(b.year) - parseInt(a.year);\n          })\n          this.setState({\n            filteredProjects: filteredProjects\n          });\n          break;\n        case \"year_asc\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.year) - parseInt(b.year);\n          })\n          this.setState({\n            filteredProjects: filteredProjects\n          });\n          break;\n        case \"mary\":\n          filteredProjects = filteredProjects.sort(function(a,b) {\n            return parseInt(a.mary) - parseInt(b.mary);\n          })\n          this.setState({\n            filteredProjects: filteredProjects\n          });\n          break;\n      }\n    }\n\n    render() {\n      let len = this.state.filteredProjects.length == 0;\n\n      return (\n        <div className={styles.projectPageContainer}>\n\n        <div className={styles.filterTagContainer}>\n          <div className={styles.filterTitle}>Filter Projects</div>\n          <div>\n          <select className={styles.filterOrder} id=\"filterOrder\" onChange={this.filterOrder.bind(this)}>\n            <option value=\"year_desc\">Year ▼</option>\n            <option value=\"year_asc\">Year ▲</option>\n            <option value=\"mary\">Mary's Favs</option>\n          </select>\n\n          </div>\n          <button className={styles.clearButton} onClick={this.clearFilters.bind(this)}>Clear Filters</button>\n          {this.state.tags.map((tag, i) => {\n            return(\n              <FilterButton\n              name={tag}\n              key={tag}\n              onChange={this.filterResults.bind(this, tag)}\n              ></FilterButton>\n            )\n          })}\n        </div>\n\n        <div className={styles.projectsContainer}>\n\n        {len\n          ? <div>\n            <div className={styles.topBar}></div>\n              <div className={styles.projectContainer}>\n              <div className={styles.projectTextContainer}>\n              <div className={styles.projectNameContainer}>\n                <span></span>\n              </div>\n              <div className={styles.projectDesc}>\n              Yikes! No project matches these filters! Try adjusting the filters ⬅ here ⬅ !\n\n              </div>\n              </div>\n            <img className={styles.previewImage} src=\"https://res.cloudinary.com/dftvewldz/image/upload/v1610068685/cryingcat.jpg\" />\n            </div>\n          </div>\n          : this.state.filteredProjects.map((project, i) => {\n            return (\n              <div key={`${project.name}`} >\n                <div className={styles.topBar}></div>\n                <div className={styles.projectContainer}>\n                  <div className={styles.projectTextContainer}>\n                  <div className={styles.projectNameContainer}>\n                    <span className={styles.projectName}>{project.name}</span>\n                    <span className={styles.projectYear}>  {project.year}</span>\n                  </div>\n                  <div className={styles.projectDesc}>\n                  {project.desc}\n                  </div>\n                </div>\n                <img className={styles.previewImage} src={project.image} alt={project.alt} />\n                </div>\n              </div>\n\n            )\n          })\n        }\n\n        </div>\n        </div>\n      )\n    }\n  }\n*/\n\n  export default Art;\n"]},"metadata":{},"sourceType":"module"}