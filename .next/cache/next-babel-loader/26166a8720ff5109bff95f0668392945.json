{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport Link from 'next/Link';\nimport LoadImage from '../components/LoadingImage.js';\nimport Navigation from '../components/Navigation.js';\nimport styles from './projects.module.css';\nimport styled from 'styled-components';\n\nconst Temp3Link = ({\n  as,\n  children,\n  className,\n  href\n}) => /*#__PURE__*/_jsx(Link, {\n  href: href,\n  as: as,\n  passHref: true,\n  children: /*#__PURE__*/_jsx(\"a\", {\n    className: className,\n    children: children\n  })\n});\n\nconst ProjectLink = styled(Temp3Link)`\n  font-family: 'Josefin Sans', sans-serif;\n  letter-spacing: 2px;\n  font-size: 24px;\n  color: #0e19a9;\n  &:hover {\n    color: blue;\n  }\n`;\nconst allProjects = [{\n  name: \"Copy/Paste\",\n  year: \"2018\",\n  desc: \"Series of mixed media collages made from children's books then digitally altered\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/h_250/v1538425934/collages/digital/c1.jpg\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/h_25/v1538425934/collages/digital/c1.jpg\",\n  alt: \"collage\",\n  tags: [\"art\"],\n  mary: '4',\n  link: \"/gallery\"\n}, {\n  name: \"ICT VR Research\",\n  year: \"2019\",\n  desc: \"VR Games created for the Institute of Creative Technology for physical therapy resesarch. Uses hand tracking to track how patients practice various arm motions.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload//c_scale,w_667/v1609780336/games/make-it-neat-preview.gif\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1609780336/games/make-it-neat-preview.gif\",\n  tags: [\"code\", \"research\", \"game\"],\n  mary: '2',\n  link: \"https://www.youtube.com/watch?v=Dvz5tDsmNiM&feature=youtu.be\"\n}, {\n  name: \"Art-Discontent\",\n  year: \"2020\",\n  desc: \"Profiles on young artistic practices. Website, interviews, and articles all created by me.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload//c_scale,w_667/v1609866701/previews/art-discontent-preview.gif\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1609866701/previews/art-discontent-preview.gif\",\n  tags: [\"art\", \"code\", \"writing\"],\n  mary: '1',\n  link: \"https://art-discontent.com/\"\n}, {\n  name: \"Off the Record\",\n  year: \"2020\",\n  desc: \"Text based game about the experience of journalists of color for Study Hall. Interface created by me.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1609866836/off-the-record-preview.png\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1609866836/off-the-record-preview.png\",\n  tags: [\"freelance\", \"games\", \"code\"],\n  mary: '2',\n  link: \"https://studyhall.xyz/off-the-record/\"\n}, {\n  name: \"Vaporsquare\",\n  year: \"2018\",\n  desc: \"An interactive installation exploring promised technological paradise, obsolescense, and unknown systems.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1535237063/vaporsquare/cmr2.gif\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1535237063/vaporsquare/cmr2.gif\",\n  tags: [\"art\"],\n  mary: '1',\n  link: \"/gallery\"\n}, {\n  name: \"Publications\",\n  year: \"2020\",\n  desc: \"Various prints, zines, and sketchbooks in an online format.\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1610603060/publicationsPreview.png\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1610603060/publicationsPreview.png\",\n  tags: [\"art\", \"writing\"],\n  mary: '3',\n  link: \"/projects/publications\"\n}, {\n  name: \"Alexa, the Acousmatic Voice\",\n  year: \"2020\",\n  desc: \"Web sound sequencer and essay about the source of Amazon's Alexa\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1609867855/games/acousmaticalexa.png\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1609867855/games/acousmaticalexa.png\",\n  tags: [\"art\", \"writing\", \"code\"],\n  mary: '5',\n  link: \"https://acousmatic-alexa.glitch.me/\"\n}, {\n  name: \"Vaporwave, the Eclectic Aesthetic about Time\",\n  year: \"2019\",\n  desc: \"Web Image Generator and essay about the visual inspirations of Vaporwave aesthetics\",\n  image: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,w_667/v1580524622/games/vaporwavegen.png\",\n  smallImage: \"https://res.cloudinary.com/dftvewldz/image/upload/c_scale,h_25/v1580524622/games/vaporwavegen.png\",\n  tags: [\"art\", \"writing\", \"code\"],\n  mary: '3',\n  link: \"https://vaporwave-generator.glitch.me/\"\n}];\nconst tags = [\"art\", \"code\", \"freelance\", \"research\", \"games\", \"vr/ar\", \"writing\"];\n\nfunction init_filterTags(tag) {\n  if (tag && tags.includes(tag)) {\n    return [tag];\n  } else {\n    return [];\n  }\n}\n\nfunction init_filters(tag) {\n  if (tag && tags.includes(tag)) {\n    let projs = allProjects.filter(p => p.tags.includes(tag));\n    return projs;\n  } else {\n    return allProjects;\n  }\n}\n\nfunction init_filterButtonStates(tag) {\n  let a = new Array(tags.length);\n\n  for (let i = 0; i < a.length; ++i) {\n    a[i] = false;\n  }\n\n  if (tag && tags.includes(tag)) {\n    a[tags.indexOf(tag)] = true;\n  }\n\n  return a;\n}\n\nconst Art = () => {\n  const router = useRouter();\n  const {\n    0: filterTags,\n    1: setFilterTags\n  } = useState(init_filterTags(router.query.filter));\n  const {\n    0: filterButtonStates,\n    1: setFilterButtonStates\n  } = useState(init_filterButtonStates(router.query.filter));\n  const projects = allProjects;\n  const {\n    0: filteredProjects,\n    1: setFilteredProjects\n  } = useState(init_filters(router.query.filter));\n\n  const filterResults = tag => {\n    let copy = [...filterTags];\n    let states = [...filterButtonStates];\n\n    if (filterTags.includes(tag)) {\n      let index = copy.indexOf(tag);\n      copy.splice(index, 1);\n      states[tags.indexOf(tag)] = false;\n    } else {\n      copy.push(tag);\n      states[tags.indexOf(tag)] = true;\n    }\n\n    let projs = allProjects.filter(p => {\n      return copy.every(t => p.tags.includes(t));\n    });\n    setFilterTags(copy);\n    setFilterButtonStates(states);\n    setFilteredProjects(projs);\n  };\n\n  const filterOrder = () => {\n    let filter = document.getElementById('filterOrder');\n    let orderedProjects = [...filteredProjects];\n\n    switch (filter.value) {\n      case \"year_desc\":\n        orderedProjects = orderedProjects.sort(function (a, b) {\n          return parseInt(b.year) - parseInt(a.year);\n        });\n        break;\n\n      case \"year_asc\":\n        orderedProjects = orderedProjects.sort(function (a, b) {\n          return parseInt(a.year) - parseInt(b.year);\n        });\n        break;\n\n      case \"mary\":\n        orderedProjects = orderedProjects.sort(function (a, b) {\n          return parseInt(a.mary) - parseInt(b.mary);\n        });\n        break;\n    }\n\n    setFilteredProjects(orderedProjects);\n  };\n\n  const clearFilters = () => {\n    let a = [...filterButtonStates];\n\n    for (let i = 0; i < a.length; ++i) {\n      a[i] = false;\n    }\n\n    setFilterTags([]);\n    setFilterButtonStates(a);\n    setFilteredProjects(allProjects);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"navContainer\",\n      children: /*#__PURE__*/_jsx(Navigation, {})\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.projectPageContainer,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: styles.filterTagContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: styles.filterTitle,\n          children: \"Filter Projects\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            margin: `12px 0px`,\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxs(\"select\", {\n            className: styles.filterOrder,\n            id: \"filterOrder\",\n            onChange: () => filterOrder(),\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"year_desc\",\n              children: \"Year \\u25BC\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"year_asc\",\n              children: \"Year \\u25B2\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"mary\",\n              children: \"Mary's Favs\"\n            })]\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: styles.clearButton,\n            onClick: () => clearFilters(),\n            children: \"Clear Filters\"\n          })]\n        }), tags.map((tag, i) => {\n          return /*#__PURE__*/_jsxs(\"button\", {\n            className: filterButtonStates[i] ? `${styles.filterButton} ${styles.toggled}` : `${styles.filterButton} ${styles.untoggled}`,\n            onClick: () => filterResults(tag),\n            children: [tag, filterButtonStates[i] && /*#__PURE__*/_jsx(\"i\", {\n              className: `material-icons ${styles.removeIcon}`,\n              children: \"close\"\n            })]\n          }, tag);\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: styles.projectsContainer,\n        children: filteredProjects.length == 0 ? /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: styles.topBar\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: styles.projectContainer,\n            children: [/*#__PURE__*/_jsxs(\"div\", {\n              className: styles.projectTextContainer,\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: styles.projectNameContainer,\n                children: /*#__PURE__*/_jsx(\"span\", {})\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.projectDesc,\n                children: \"Yikes! No project matches these filters! Try adjusting the filters \\u2B05 here \\u2B05 !\"\n              })]\n            }), /*#__PURE__*/_jsx(\"img\", {\n              className: styles.previewImage,\n              src: \"https://res.cloudinary.com/dftvewldz/image/upload/v1610068685/cryingcat.jpg\"\n            })]\n          })]\n        }) : filteredProjects.map((project, i) => {\n          return /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: styles.topBar\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: styles.projectContainer,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: styles.projectTextContainer,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: styles.projectNameContainer,\n                  children: [project.link[0] === '/' ? /*#__PURE__*/_jsx(ProjectLink, {\n                    className: styles.projectName,\n                    href: project.link,\n                    children: project.name\n                  }) : /*#__PURE__*/_jsx(\"a\", {\n                    className: styles.projectName,\n                    href: project.link,\n                    target: \"_blank\",\n                    children: project.name\n                  }), /*#__PURE__*/_jsxs(\"span\", {\n                    className: styles.projectYear,\n                    children: [\"  \", project.year]\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: styles.projectDesc,\n                  children: project.desc\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: styles.previewImage,\n                children: /*#__PURE__*/_jsx(LoadImage, {\n                  largeImgSrc: project.image,\n                  smallImgSrc: project.smallImage,\n                  alt: project.alt\n                })\n              })]\n            })]\n          }, `${project.name}`);\n        })\n      })]\n    })]\n  });\n};\n\nArt.getInitialProps = async ({\n  query\n}) => {\n  return {\n    query: query\n  };\n};\n\nexport default Art;","map":null,"metadata":{},"sourceType":"module"}